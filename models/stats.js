const mongoose = require('mongoose');

const Schema = mongoose.Schema;

const StatsSchema = new Schema({
  championCode: Number,
  league: Number,
  duoRanked: {
    wins: Number,
    losses: Number,
    gamesCount: Number,
    roundsCount: Number,
    abilityUses: Number,
    damageDone: Number,
    damageReceived: Number,
    deaths: Number,
    disablesDone: Number,
    disablesReceived: Number,
    energyGained: Number,
    energyUsed: Number,
    healingDone: Number,
    healingReceived: Number,
    kills: Number,
    score: Number,
    timeAlive: Number,
  },
  duoNormal: {
    wins: Number,
    losses: Number,
    gamesCount: Number,
    roundsCount: Number,
    abilityUses: Number,
    damageDone: Number,
    damageReceived: Number,
    deaths: Number,
    disablesDone: Number,
    disablesReceived: Number,
    energyGained: Number,
    energyUsed: Number,
    healingDone: Number,
    healingReceived: Number,
    kills: Number,
    score: Number,
    timeAlive: Number,
  },
  trioRanked: {
    wins: Number,
    losses: Number,
    gamesCount: Number,
    roundsCount: Number,
    abilityUses: Number,
    damageDone: Number,
    damageReceived: Number,
    deaths: Number,
    disablesDone: Number,
    disablesReceived: Number,
    energyGained: Number,
    energyUsed: Number,
    healingDone: Number,
    healingReceived: Number,
    kills: Number,
    score: Number,
    timeAlive: Number,
  },
  trioNormal: {
    wins: Number,
    losses: Number,
    gamesCount: Number,
    roundsCount: Number,
    abilityUses: Number,
    damageDone: Number,
    damageReceived: Number,
    deaths: Number,
    disablesDone: Number,
    disablesReceived: Number,
    energyGained: Number,
    energyUsed: Number,
    healingDone: Number,
    healingReceived: Number,
    kills: Number,
    score: Number,
    timeAlive: Number,
  },
  log: {
    type: Schema.Types.ObjectId,
    ref: 'Log',
  },
});

module.exports = mongoose.model('Stats', StatsSchema);

